@page "/update_product"
@inject IWebAppHttpClient _httpClient
<PageTitle>Update Product</PageTitle>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Search Product</h5>
        <form>
            <div class="mb-3">
                <label for="productId" class="form-label">Product ID</label>
                <input type="text" class="form-control" id="productId" @bind="Id" placeholder="Product ID">
            </div>
            <button type="button" class="btn btn-primary" @onclick="SearchProduct">Search</button>
            <span class="text-info">@($"{InfoMessage1}")</span>
        </form>
    </div>
</div>

<div class="@_class mt-3">
    <div class="card-body">
        <h5 class="card-title">Update Product</h5>
        <form>
            <div class="mb-3">
                <label for="productName" class="form-label">Product Name</label>
                <input type="text" class="form-control" id="productName" @bind="@_product.Name" placeholder="min-3, max-100 chars">
            </div>
            <div class="mb-3">
                <label for="productPrice" class="form-label">Price</label>
                <input type="number" class="form-control" id="productPrice" @bind="@_product.Price" step="0.05" min="0.01">
            </div>
            <button type="button" class="btn btn-primary" @onclick="UpdateProduct">Update Product</button>
            <span class="text-info">@($"{InfoMessage2}")</span>
        </form>
    </div>
</div>

@code {
    private Guid Id { get; set; } = Guid.Empty;
    private Product _product { get; set; } = new Product();
    private string InfoMessage1 = string.Empty;
    private string InfoMessage2 = string.Empty;
    private string _class = "d-none";

    private async Task UpdateProduct()
    {
        try
        {
            await _httpClient.UpdateProduct(_product);
            InfoMessage2 = "Success";
        }
        catch (Exception)
        {
            InfoMessage2 = "Failed";
        }
    }
    private async Task SearchProduct(MouseEventArgs e)
    {
        try
        {
            _product = await _httpClient.GetProduct(Id);
            InfoMessage1 = "Success";
            _class = "card";
        }
        catch (Exception)
        {
            InfoMessage1 = "Failed";
        }
    }
}

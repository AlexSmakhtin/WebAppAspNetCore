@page "/delete_product"
@inject IWebAppHttpClient HttpClient
@implements IDisposable

<PageTitle>Delete Product</PageTitle>

<div class="card">
    <div class="card-body">
        <h5 class="card-title">Search Product</h5>
        <form>
            <div class="mb-3">
                <label for="productId" class="form-label">Product ID</label>
                <input type="text" class="form-control w-25" id="productId" @bind="Id" placeholder="Product ID">
            </div>
            <button type="button" class="btn btn-primary" @onclick="SearchProduct">Search</button>
            <span class="text-info">@($"{_infoMessage1}")</span>
        </form>
    </div>
</div>

@if (_product != null)
{
    <div class="@_class">
        <div class="mt-3">
            <ProductPage Product="_product">
            </ProductPage>
        </div>
        <div class="d-flex align-items-end m-3">
            <button type="button" class="btn btn-primary " @onclick="DeleteProduct">Delete</button>
            <span class="text-info">@($"{_infoMessage2}")</span>
        </div>

    </div>
}


@code {
    private Guid Id { get; set; } = Guid.Empty;
    private Product? _product = null!;
    private string _infoMessage1 = string.Empty;
    private string _infoMessage2 = string.Empty;
    private string _class = string.Empty;
    private readonly CancellationTokenSource _cts = new();

    private async Task DeleteProduct()
    {
        try
        {
            if (_product == null)
                throw new NullReferenceException(nameof(_product));
            await HttpClient.DeleteProduct(_product.Id, _cts.Token);
            _infoMessage2 = "Success";
        }
        catch (Exception)
        {
            _infoMessage2 = "Failed";
        }
    }

    private async Task SearchProduct(MouseEventArgs e)
    {
        try
        {
            _product = await HttpClient.GetProduct(Id, _cts.Token);
            _infoMessage1 = "Success";
            _class = string.Empty;
        }
        catch (Exception)
        {
            _infoMessage1 = "Failed";
        }
    }

    public void Dispose()
    {
        _cts.Dispose();
    }

}
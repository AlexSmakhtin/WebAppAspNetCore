@using MySuperShop.BlazorFrontend.Services.Implementations
@using Blazored.LocalStorage
@inherits LayoutComponentBase
@namespace MySuperShop.BlazorFrontend.Layout
@inject LayoutStateService StateService
@implements IDisposable
@inject ILocalStorageService LocalStorage
@inject IJSRuntime JsRuntime
@inject IWebAppHttpClient HttpClient

<div class="container-fluid">
    <div class="row">
        <!-- Sidebar -->
        <nav class="col-md-2 d-none d-md-block bg-light sidebar" style="min-height: 100vh;">
            <div class="sidebar-sticky">
                <ul class="nav flex-column">
                    <li class="nav-item">
                        <NavLink class="nav-link" href="">
                            <span data-feather="home"></span>
                            Home
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="registration">
                            <span data-feather="file"></span>
                            Registration
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="nav-link" href="authentication">
                            <span data-feather="file"></span>
                            Authentication
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="@StateService.CssClass" href="products">
                            <span data-feather="file"></span>
                            Products
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="@StateService.CssClass" href="add_product">
                            <span data-feather="file"></span>
                            Add product
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="@StateService.CssClass" href="delete_product">
                            <span data-feather="file"></span>
                            Delete product
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="@StateService.CssClass" href="update_product">
                            <span data-feather="file"></span>
                            Update product
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="@StateService.CssClass" href="traffic">
                            <span data-feather="file"></span>
                            Traffic info
                        </NavLink>
                    </li>
                    <li class="nav-item">
                        <NavLink class="@StateService.CssClass" href="currentAccount">
                            <span data-feather="file"></span>
                            Current account
                        </NavLink>
                    </li>
                </ul>
            </div>
        </nav>

        <!-- Main content -->
        <main role="main" class="col-md-9 ml-sm-auto col-lg-10 px-4">
            <div class="pt-3">
                @Body
            </div>
        </main>
    </div>
</div>

@code {

    protected override async Task OnInitializedAsync()
    {
        StateService.OnChange += Refresh;
        var jwt = await LocalStorage.GetItemAsStringAsync("jwt");
        if (jwt != null)
        {
            StateService.SetCssClass("nav-link");
            var values = new List<string> { $"Bearer {jwt}" };
            await HttpClient.SetHeader("Authorization", values);
        }
        await JsRuntime.InvokeAsync<string>("console.log", $"jwt: {jwt}");
    }

    private void Refresh()
    {
        StateHasChanged();
    }

    // Очистка подписки при удалении компонента
    public void Dispose()
    {
        StateService.OnChange -= Refresh;
    }

}